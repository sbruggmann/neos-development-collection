`3.3.12 (2018-06-26) <https://github.com/neos/neos-development-collection/releases/tag/3.3.12>`_
================================================================================================

Overview of merged pull requests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`DOCS: Add accept option to Asset- and Image-Editor  <https://github.com/neos/neos-development-collection/pull/2093>`_
----------------------------------------------------------------------------------------------------------------------

Documenting the new `accept`-option.

See: https://github.com/neos/neos-ui/pull/1900

* Packages: ``Neos``

`BUGFIX: Make sure to materialize as few nodes as possible <https://github.com/neos/neos-development-collection/pull/2085>`_
----------------------------------------------------------------------------------------------------------------------------

For property changes there is no necessity to materialize
auto-created child nodes as well. In projects with deeply
nested auto-created node structures this behaviour could
quickly generate huge amounts of changed nodes therefore
we should only materialize child nodes for structural
changes.

All of this is only valid for workspace materializations though,
in case dimensions need to be materialized as well, we need to
materialize all child nodes as well for consistency.

`BUGFIX: On asset change flush entries tagged with AssetDynamicTag <https://github.com/neos/neos-development-collection/pull/2082>`_
------------------------------------------------------------------------------------------------------------------------------------

When using `registerAssetChange()` provided by `ContentCacheFlusher` not all affected
cache entries would always be flushed. This adds flushing of entries tagged `AssetDynamicTag_*`
as done through `ConvertUrisImplementation`–`Runtime`–`RuntimeContentCache` to solve
this.

`BUGFIX: Prevent stale object references in user runtime cache <https://github.com/neos/neos-development-collection/pull/2084>`_
--------------------------------------------------------------------------------------------------------------------------------

Holding a reference to an doctrine object can be dangerous
if something happens to the UOW during that time, so that
a new instance of the entity is produced, resulting in a
stale entity reference that must be considered detached.
We therefore should only cache the persistence identifier of
a user for easier retrieval. If said user was already loaded by
doctrine it will be available in the identity map and should not
trigger another query, making this not less efficient than the
original solution.

Additionally refactored so that the cache is flat.

`Detailed log <https://github.com/neos/neos-development-collection/compare/3.3.11...3.3.12>`_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
